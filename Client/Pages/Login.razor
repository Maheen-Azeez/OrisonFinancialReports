
@page "/Login"
@layout LoginLayout
@using System.Data
@using System.Net.Http
@using OrisonMIS.Shared.Entities.General
@using Syncfusion.Blazor.Spinner
@using Syncfusion.Blazor.Buttons
@using Blazored.Toast
@inject Blazored.SessionStorage.ISessionStorageService localStorage
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject OrisonMIS.Client.Services.AccountService accService
@* @inject IToastService toastservice
 *@
 @inject OrisonMIS.Client.Logics.Contract.General.IAccounts _IAccounts


<style>
    .login {
        position: relative;
        z-index: 1;
        background: #ffffff;
        max-width: 550px;
        margin: 0 auto 80px;
        padding: 45px;
        text-align: center;
        box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.3), 0 5px 5px 0 rgba(0, 0, 0, 0.19);
        transition-duration: 0.3s;
        border-radius: 6px;
    }

    .loginParent {
        max-width: 400px;
        padding: 8% 0 0;
        margin: auto;
    }

    .login:hover {
        box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.7), 0 5px 5px 0 rgba(0, 0, 0, 0.27);
    }

    .button {
        width: 100%;
        background-color: #04396d;
        border: none;
        color: white;
        padding: 8px 30px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 15px;
        border-radius: 9px;
        cursor: pointer;
        -webkit-transition-duration: 0.4s;
        transition-duration: 0.4s;
    }

    .button2:hover {
        box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24),0 17px 50px 0 rgba(0,0,0,0.19);
    }

    .textBox {
        font-size: 12px;
        width: 100%;
        padding: 7px 20px;
        display: inline-block;
        border: 1.1px solid #ccc;
        border-radius: 7px;
        box-sizing: border-box;
        background-color: #e7eef4;
    }

        .textBox:hover {
            background-color: #f5f4f4;
        }

    #container {
        margin-top: 0px;
    }

        #container .row {
            display: flex;
        }

    .spin-row {
        position: initial;
        height: 40px;
        width: 120px;
    }

    #container .row {
        margin-right: 0px;
        margin-left: 0px;
    }

    .fabric-dark .e-spinner-pane .e-spinner-inner .e-spin-fabric .e-path-circle {
        stroke: rgba(0, 116, 204, 0.4);
    }

    .alert {
        background-color: transparent;
        position: absolute;
        display: flex;
        justify-content: center;
        margin-top: 15px;
        color: red;
        /*height: 10px;*/
        padding: 0rem;
        border: 1px solid transparent;
        border-radius: .25rem;
        font-size: 0.9em;
    }

    .alert-success {
        color: #039624 !important;
    }
</style>
<div class="container-fluid">
    <div class="loginParent">
        <div class="login">
            <div class="form-group" style="text-align: Center">
                <img src="Images/Orison_Logo_New.png" style="width:auto;height:110px;" />
            </div>
            <div class="form-group" style="text-align: Center;font-weight: bold;">
                <label style="color: #04396d; font-size: medium;"></label>
            </div>


            <div class="form-group" style="padding-top:1%;">
                <input type="text" placeholder="UserName" @bind-value="@objSalesman.Username" class="textBox" />
            </div>
            <div class="form-group" style="padding-top:1%;">
                <input type="password" placeholder="Password" @bind-value="@objSalesman.Password" class="textBox" />
            </div>
            <div class="form-group" style="padding-top:1%;">
                @if (Isload == false)
                 {
                    <SfButton CssClass="button button2 btn" @onclick="@LoginSalesman">Login</SfButton>
                    @*<div style="padding-left:5rem;">
                        <BSAlert Color="Color.Danger" @bind-IsOpen="@IsLoginAlert" AutoHide="true">
                            Invalid UserName or Password ! <a><i class="fa alert" aria-hidden="true"></i></a>
                        </BSAlert>
                    </div>*@
                 }
                else
                {
                <div id="container">
                    <div class="row">
                        <div class="col-sm">
                            <div class="spin-row">
                                <SfSpinner Size="40" Label="" Type="Syncfusion.Blazor.Spinner.SpinnerType.Fabric" Visible="Isload"></SfSpinner>
                            </div>
                        </div>
                    </div>
                </div>
                }
            </div>
        </div>
    </div>
</div>
<footer class="container-fluid text-center" style="color:black;padding-left:0;margin:0;padding-right:0px;">

    <span style="color:black;text-align:center">
        <p style="color:black;text-align: center">Powered By <img src="Images/BackgroundOrisonLogo.png" id="img2" alt="logo" style="width:30px;height:28px" /><a href="https://www.hirasolutions.com" title=""> Orison</a></p>
    </span>
</footer>

@code{ string user, pwd;
    public bool Isload = false;
    IEnumerable<LoginModel> SalesmanLogin = new List<LoginModel>();

    LoginModel objSalesman = new LoginModel();

    protected override async Task OnInitializedAsync()
    {
        user = await localStorage.GetItemAsync<string>("Username");
        pwd = await localStorage.GetItemAsync<string>("Password");
        ////await localStorage.ClearAsync();
        //await localStorage.RemoveItemAsync("LocalSessionUserId");
        //await localStorage.RemoveItemAsync("ID");
        //await localStorage.RemoveItemAsync("Password");
        objSalesman.Username = user;
        if (user != null && pwd != null)
        {
            NavigationManager.NavigateTo("SalesOrder");
        }
    }

    protected async Task LoginSalesman()
    {
        Isload = true;
       
        objSalesman.Password = accService.PasswordEncode(objSalesman.Password);
        SalesmanLogin = await _IAccounts.LoginUserNew(objSalesman);

        if (SalesmanLogin.Count() == 0)
        {
            // toastservice.ShowError("Incorrect Username or Password !");
            Isload = false;
        }
        else
        {
            await localStorage.SetItemAsync("ID", SalesmanLogin.First().ID);
            await localStorage.SetItemAsync("Username", SalesmanLogin.First().Username);
            await localStorage.SetItemAsync("Password", SalesmanLogin.First().Password);
            await localStorage.SetItemAsync("LocalSessionUserId", SalesmanLogin.First().ID);
            await localStorage.SetItemAsync("BranchID", 31);
            Isload = false;
            //NavigationManager.NavigateTo("TaxInvoice");
            NavigationManager.NavigateTo("SalesOrder");
        }

    } }